{
  "version": 3,
  "sources": ["../../../node_modules/three/examples/jsm/geometries/TextGeometry.js"],
  "sourcesContent": ["/**\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n *  bevelOffset: <float> // how far from text outline does bevel start\n * }\n */\n\nimport {\n\tExtrudeGeometry\n} from 'three';\n\nclass TextGeometry extends ExtrudeGeometry {\n\n\tconstructor( text, parameters = {} ) {\n\n\t\tconst font = parameters.font;\n\n\t\tif ( font === undefined ) {\n\n\t\t\tsuper(); // generate default extrude geometry\n\n\t\t} else {\n\n\t\t\tconst shapes = font.generateShapes( text, parameters.size );\n\n\t\t\t// translate parameters to ExtrudeGeometry API\n\n\t\t\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t\t\t// defaults\n\n\t\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\t\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\t\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\t\t\tsuper( shapes, parameters );\n\n\t\t}\n\n\t\tthis.type = 'TextGeometry';\n\n\t}\n\n}\n\n\nexport { TextGeometry };\n"],
  "mappings": ";;;;;AAqBA,iCAA2B,gBAAgB;AAAA,EAE1C,YAAa,MAAM,aAAa,IAAK;AAEpC,UAAM,OAAO,WAAW;AAExB,QAAK,SAAS,QAAY;AAEzB;AAAA,WAEM;AAEN,YAAM,SAAS,KAAK,eAAgB,MAAM,WAAW;AAIrD,iBAAW,QAAQ,WAAW,WAAW,SAAY,WAAW,SAAS;AAIzE,UAAK,WAAW,mBAAmB;AAAY,mBAAW,iBAAiB;AAC3E,UAAK,WAAW,cAAc;AAAY,mBAAW,YAAY;AACjE,UAAK,WAAW,iBAAiB;AAAY,mBAAW,eAAe;AAEvE,YAAO,QAAQ;AAAA;AAIhB,SAAK,OAAO;AAAA;AAAA;",
  "names": []
}
